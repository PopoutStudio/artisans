// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(cuid())
  email            String    @unique
  password         String
  role             Role      @default(ARTISAN)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  artisan          Artisan?
  messagesSent     Message[] @relation("MessageSender")
  messagesReceived Message[] @relation("MessageReceiver")
}

model Artisan {
  id          String   @id @default(cuid())
  userId      String   @unique
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  name        String
  description String?
  services    String[] // Liste simple des services pour MVP 1
  commune     String? // Commune d'intervention
  codePostal  String? // Code postal
  rayon       Int      @default(10) // Rayon d'intervention en km
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Message {
  id         String   @id @default(cuid())
  senderId   String
  receiverId String
  content    String
  isRead     Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  sender     User     @relation("MessageSender", fields: [senderId], references: [id], onDelete: Cascade)
  receiver   User     @relation("MessageReceiver", fields: [receiverId], references: [id], onDelete: Cascade)
}

enum Role {
  ADMIN
  ARTISAN
  CLIENT
}
